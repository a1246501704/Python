\1、调用函数：函数名()
# 需要注意：先通过名字找到函数的内存地址，然后加括号调用

\2、函数的返回值return
注意的第一点： 
# 在调用函数的过程中，一旦执行到return，就会立刻终止函数，并且把return后的结果当做本次调用的返回值返回.
# 函数体内可以有多个return，但是只能执行一次(匹配到的第一个return)。
def foo():
    print('111')
    return 1
    print('2222')
    return 2
    print('3333')
    return 3

res=foo()
print('函数调用完毕',res)

注意的第二点：
# 返回的值可以是任意类型
# 可以返回一个值 ===> 值
# 可以用逗号分隔，返回多个值 ===> 放到元组中
# 可以写多种类型，用逗号分割  ===> 放到元组中
def foo():
    return 'sfafadsf'           # 可以返回字符串
    return ['a','b','c']        # 可以返回一个列表
    return 1,2,[1,2,3],{'a':1}  # 最后放在元组中
res=foo()
print('函数调用完毕',res)

注意的第三点：
# 没有return：默认返回None
def foo():
    return None

res=foo()
print('函数调用完毕',res,type(res))

# 什么时候该有返回值？
　　　　调用函数，经过一系列的操作，最后要拿到一个明确的结果，则必须要有返回值
　　　　通常有参函数需要有返回值，输入参数，经过计算，得到一个最终的结果
# 什么时候不需要有返回值？
　　　　调用函数，仅仅只是执行一系列的操作，最后不需要得到什么结果，则无需有返回值
　　　　通常无参函数不需要有返回值

\3、调用函数的三种形式
# 1 语句形式：foo()
# 2 表达式形式：3*len('hello')
# 3 当中另外一个函数的参数：range(len('hello'))

def foo():
    print('from foo')
    return 123

# foo()        # 直接调用

# res=foo()    # 调用后将返回值赋值给一个变量
# print(res)

res=foo()*10   # 将返回值做计算并赋值给变量
print(res)



