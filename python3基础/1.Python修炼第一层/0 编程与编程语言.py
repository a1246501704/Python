\编程与编程语言
python是一门编程语言，作为学习python的开始，需要事先搞明白：编程的目的是什么？什么是编程语言？什么是编程？

    编程的目的：
    #计算机的发明，是为了用机器取代/解放人力，而编程的目的则是将人类的思想流程按照某种能够被计算机识别的表达方式传递给计算机，从而达到让计算机能够像人脑/电脑一样自动执行的效果。    
    什么是编程语言？
    #上面提及的能够被计算机所识别的表达方式即编程语言，语言是沟通的介质，而编程语言是程序员与计算机沟通的介质。在编程的世界里，计算机更像是人的奴隶，人类编程的目的就命令奴隶去工作。
    什么是编程？
    #编程即程序员根据需求把自己的思想流程按照某种编程语言的语法风格编写下来，产出的结果就是包含一堆字符的文件。
    #强调：程序在未运行前跟普通文件无异，只有程序在运行时，文件内所写的字符才有特定的语法意义

\所以我有话对大家说
Python是语言，而学习语言的套路都是一样的，以英语学习为例，你需要学单词，然后学语法，最后写作文。
    英语的单词---------->Python中的关键字
    英语的语法---------->Python的语法
    英语的作文---------->用Python语言写的程序

    此时你心里应该有数了，学Python其实很简单，全都是在记忆一些固定的套路而已，那为何有的人会觉得Python难呢？来看一个普遍的问题，问题中包含答案。。。。。。

    经常有学生问：老师，我上课都能听得懂，为啥我就是不会写程序。
    我：你这不废话么！
    你学完了英语的单词、语法、还有写作文的方式，你能立刻写出一篇优美的作文吗？当然不能，那么问题出在哪里呢？
    你想想，你现在用汉语跟我沟通，脑子里会不会分神去琢磨某个汉字的意思，汉语的语法应该怎样？你当然不会，你脑子里想到什么，就会很自然地将它表达出来，因为你已经足够熟练，汉语的文字、单词、语法等已经深深地植入了你的意识里。学英语，学Python都是一样的道理，你以为你会了，你可能确实会了，但你远没有达到烂熟于心的地步，因此你在写程序的时候需要考虑的是关键字的用法、语法结构，而我则只需要考虑我脑子里的逻辑如何安排，逻辑走通了程序自然就表达出来了，我完全不会考虑关键字或语法什么的，它就像是我的器官一样，我不会在想吃饭的时候考虑应该用锭眼吃还是用嘴吃，这就是你跟我的差别。
    那有何好的解决方法呢？答：没有。不下狠心翻来覆去练习，知识是无法根植于你的潜意识的，你也永远无法自己写程序，就跟当年郭靖学降龙十八掌一样，洪七公要他打200下，他能打1000下，屌丝到不能再屌丝的你，没有这点意志力，就别妄想咸鱼翻身了。。。。。。
    附一句：我不知道成功有没有捷径，但我确定学Python没有，没有几万行代码的洗礼，你不可能成为一名优秀的程序员，这就是我想对你说的。

\编程语言分类
编程的语言的发展经历了
    #机器语言：站在计算机(奴隶)的角度，说计算机能听懂的语言，那就是直接用二进制编程，直接操作硬件；0和1
    #汇编语言：站在计算机(奴隶)的角度，简写的英文标识符取代二进制去编写程序，本质仍然是直接操作硬件;
    #高级语言：站在人(奴隶主)的角度，说人话，即用人类的字符去编写程序，屏蔽了硬件操作.

高级语言更贴近人类语言，因而造成了：它必须被翻译成计算机能读懂二进制后，才能被执行，按照翻译方式分为
    #1. 编译型（需要编译器，相当于用谷歌翻译）：如C，执行速度快，调试麻烦.   c  java
    #2. 解释型（需要解释器，相当于同声传译）：如python，执行速度慢，调试方便.  python  php  js java

总结
    机器语言
    #优点是最底层，执行速度最快
    #缺点是最复杂，开发效率最低

    汇编语言
    #优点是比较底层，执行速度最快
    #缺点是复杂，开发效率最低

    高级语言
    #编译型语言执行速度快，不依赖语言环境运行，跨平台差
    #解释型跨平台好，一份代码，到处使用，缺点是执行速度慢，依赖解释器运行


\目前Python主要应用领域
#1. WEB开发——最火的Python web框架Django, 支持异步高并发的Tornado框架，短小精悍的flask,bottle, Django官方的标语把Django定义为the framework for perfectionist with deadlines(大意是一个为完全主义者开发的高效率web框架)
#2. 网络编程——支持高并发的Twisted网络框架， py3引入的asyncio使异步编程变的非常简单
#3. 爬虫——爬虫领域，Python几乎是霸主地位，Scrapy\Request\BeautifuSoap\urllib等，想爬啥就爬啥
#4. 云计算——目前最火最知名的云计算框架就是OpenStack,Python现在的火，很大一部分就是因为云计算
#5. 人工智能——谁会成为AI 和大数据时代的第一开发语言？这本已是一个不需要争论的问题。如果说三年前，Matlab、Scala、R、Java 和 Python还各有机会，局面尚且不清楚，那么三年之后，趋势已经非常明确了，特别是前两天 Facebook 开源了 PyTorch 之后，Python 作为 AI 时代头牌语言的位置基本确立，未来的悬念仅仅是谁能坐稳第二把交椅。
#6. 自动化运维——问问中国的每个运维人员，运维人员必须会的语言是什么？10个人相信会给你一个相同的答案，它的名字叫Python
#7. 金融分析——我个人之前在金融行业，10年的时候，我们公司写的好多分析程序、高频交易软件就是用的Python,到目前,Python是金融分析、量化交易领域里用的最多的语言
#8. 科学运算—— 你知道么,97年开始，NASA就在大量使用Python在进行各种复杂的科学运算，随着NumPy, SciPy, Matplotlib, Enthought librarys等众多程序库的开发，使的Python越来越适合于做科学计算、绘制高质量的2D和3D图像。和科学计算领域最流行的商业软件Matlab相比，Python是一门通用的程序设计语言，比Matlab所采用的脚本语言的应用范围更广泛
#9. 游戏开发——在网络游戏开发中Python也有很多应用。相比Lua or C++,Python 比 Lua 有更高阶的抽象能力，可以用更少的代码描述游戏业务逻辑，与 Lua 相比，Python 更适合作为一种 Host 语言，即程序的入口点是在 Python 那一端会比较好，然后用 C/C++ 在非常必要的时候写一些扩展。Python 非常适合编写 1 万行以上的项目，而且能够很好地把网游项目的规模控制在 10 万行代码以内。另外据我所知，知名的游戏<文明> 就是用Python写的

